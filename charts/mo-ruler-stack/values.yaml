# Default values for mo-ruler-stack.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
moRuler:
  replicaCount: 1
  
  image:
    containerName: mo-ruler
    repository: matrixorigin/observability
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: mo-ruler-0.9.0-alpha.2

  resources:
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 200m
      memory: 200Mi

  nameOverride: ""
  fullnameOverride: ""
  
  service:
    type: ClusterIP
    port: 9199
    targetPort: 9199 

  apiServer:
    port: 9199

  extraSecretMounts:
    #- name: mo-secret-mount
    #  secretName: mo-ob-secret
    #  mountPath: /etc/secrets/mo-secret
    #  readOnly: true
    #  defaultMode: 0440
  
  rulerSpec:
    # cooperate with mo.type = env & extraSecretMounts
    secret: mo-ob-secret

    global:
        evaluation_interval: 30s

    rule_files:
        - "/rules/*.yaml"
        - "/rules/*.yml"

    alerting:
      alertingEndpoint:
        scheme: http
        targets:
          - "mo-ruler-stack-alertmanager:9093"

    log:
        level: debug
        format: console
        filename:
        maxSize:
        maxDays:
        maxBackups:
    ruler:
      rule:
        ruleType: metric
        notificationQueueCapacity: 10000
        outageTolerance: 1h
        forGracePeriod: 10m
        resendDelay: 1m
        metricConfigPath: /ruler-prometheus.yml
      mo:
        type: cfg
        labels:
          matrixone.cloud/role: observability
        host: 127.0.0.1
        port: 6001
        user: dump
        password: 111
        connectTimeout: 5s
        maxOpens: 5
        maxIdles: -1
        initPingCnt: 10
      query:
        maxQueryTimeout: 2m
        subQueryStepInterval: 1m
        lookBackDelta: 5m
        maxSamples: 50000000
        maxPointsPerTs: 11000
        database: mysql
        account: sys
      apiServer:
        lookBackDelta: 5m
        listenAddress: 0.0.0.0:9199
        readTimeout: 5m
        maxConnections: 512
        routePrefix: /
        consoleTemplatesPath: consoles
        consoleLibrariesPath: console_libraries
        enableLifecycle: false
        pageTitle: MO-Ruler Server
        appName: MO-Ruler

## alertmanager sub-chart configurable values
## Please see https://github.com/prometheus-community/helm-charts/tree/main/charts/alertmanager
##
## Configuration for alertmanager
## ref: https://prometheus.io/docs/alerting/alertmanager/
##
alertmanager:
  enabled: false
  replicaCount: 1
  config:
    global: 
        resolve_timeout: 5m
        smtp_from: 'it@matrixorigin.cn'
        smtp_hello: 'smtp.exmail.qq.com:465'
        smtp_smarthost: 'smtp.exmail.qq.com:465'
        smtp_auth_username: 'it@matrixorigin.cn'
        smtp_auth_password_file: '/tmp/smtp-password/smtp-password'
        smtp_require_tls: false
    route:
        group_by: ['alertname']     # 分组标签
        group_wait: 10s             # 告警等待时间。告警产生后等待10s，如果有同组告警一起发出
        group_interval: 10s         # 两组告警的间隔时间
        repeat_interval: 1d         # 重复告警的间隔时间，可减少相同邮件的发送频率
        receiver: 'default-receiver'
    receivers:
      - name: default-receiver
        email_configs:
          - to: 'user@matrixorigin.cn'
            # send_resolved: true
  extraSecretMounts: 
  - name: smtp-files
    mountPath: /tmp/smtp-password
    subPath: ""
    secretName: alertmanager-secret
    readOnly: true

  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 10m
      memory: 32Mi


## Using default values from https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
## details in https://github.com/grafana/helm-charts/blob/main/charts/grafana/README.md
##
grafana:
  replicas: 1
  enabled: true
    # static passwd
    #adminUser: admin
    #adminPassword: admin
  admin:
    ## Name of the secret. Can be templated.
    existingSecret: "grafana-admin-secret"
    userKey: admin-user
    passwordKey: admin-password
  # for grafana.ini
  extraSecretMounts:
    - name: auth-generic-oauth-secret-mount
      secretName: auth-generic-oauth-secret
      defaultMode: 0440
      mountPath: /etc/secrets/auth_generic_oauth
      readOnly: true
  grafana.ini:
    auth.generic_oauth:
      name: dex
      enabled: true
      scopes: openid profile email offline_access
      auth_url: https://oidc.matrixorigin.cn:31443/dex/auth
      token_url: https://oidc.matrixorigin.cn:31443/dex/token
      api_url: https://oidc.matrixorigin.cn:31443/dex/userinfo
      allow_sign_up: true
      client_id: $__file{/etc/secrets/auth_generic_oauth/client_id}
      client_secret: $__file{/etc/secrets/auth_generic_oauth/client_secret}
  service:
    enabled: true
    type: LoadBalancer
    port: 80
    targetPort: 3000
    # targetPort: 4181 To be used with a proxy extraContainer
    ## Service annotations. Can be templated.
    annotations: {}
    labels: {}
    portName: service
    # Adds the appProtocol field to the service. This allows to work with istio protocol selection. Ex: "http" or "tcp"
    appProtocol: ""
  sidecar:
    dashboards:
      enabled: true
    datasources:
      enabled: true
      searchNamespace: ALL

